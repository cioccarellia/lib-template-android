/**
 * Designed and developed by Andrea Cioccarelli (@cioccarellia)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import com.buildconfig.config.KotlinCompilerConfig

apply from: rootProject.file("scripts/custom/versions.gradle")
apply plugin: 'io.codearte.nexus-staging'

buildscript {
    // Global project-wide kotlin version
    ext.kotlin_version = KotlinCompilerConfig.kotlinVersion
    
    /**
     * The repositories block configures the repositories Gradle uses to
     * search or download the dependencies.
     */
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    
    /**
     * The dependencies block configures the dependencies Gradle needs to use
     * to build your project.
     */
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${KotlinCompilerConfig.kotlinVersion}"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.39.0"
    }
}

/**
 * The allprojects block is where you configure the repositories and
 * dependencies used by all modules in your project, such as third-party plugins
 * or libraries. However, you should configure module-specific dependencies in
 * each module-level build.gradle file. For new projects.
 */
allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        // Kotlin compiler JVM-target version (as string)
        kotlinOptions {
            jvmTarget = KotlinCompilerConfig.jvmTargetStr
            freeCompilerArgs += ["-module-name", project.path.replace(':', '')]
        }
    
        // Kotlin compiler JVM-target version (as int)
        sourceCompatibility = KotlinCompilerConfig.jvmTargetInt
        targetCompatibility = KotlinCompilerConfig.jvmTargetInt
    }
}